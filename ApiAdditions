== API Introduction == 

Spacewalk provides an Application Programming Interface (API) to enable creation of tools and programs to automate common tasks typically performed through the Spacewalk Web User Interface.  The tools/programs may be implemented in any programming language that provides an XMLRPC client interface; however, Python and Perl are the two most commonly used languages.

== API Development ==

We are in the process of defining and developing additional APIs.

To view the APIs currently available for Spacewalk, simply navigate to https://myspacewalkserver.com/rhn/apidoc/index.jsp, where ''myspacewalk.com'' is your installed Spacewalk server.

If you have an idea or need for a new API, please add it to the Planned API table below.  If you aren't sure exactly what an API call should be named, simply add it to the scratchpad below and a developer will add it to the Planned APIs table.

=== Scratchpad ===

 * Be able to delete system notes (system namespace) -- I could probably write this, but it would take Justin like 5 minutes. --stahnma
 * idea2
 * idea3


=== Planned APIs ===


||  '''Task''' || '''Target Release''' ||  '''Estimate (hours)''' || '''Developer''' || '''Status''' || '''Notes''' ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: channel''' ||  ||  ||  ||  ||  ||
||  channel.listErrata(string sessionKey, string advisoryType) || 0.3 || 4 ||  ||  ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: channel.software''' ||  ||  ||  ||  ||  ||
||  channel.software.getPackage(string sessionKey, int packageId) || 0.3 || 8 || jsherrill ||  ||  ||
||  string channel.software.getPackageUrl(string sessionKey, int packageId) || 0.3 || 5 || jsherrill ||  || Obtain the package download URL. ||
||  channel.software.mergeErrata(string sessionKey, string fromChannel, string toChannel) || 0.3 || 3 ||  ||  ||  ||
||  channel.software.mergeErrata(string sessionKey, string fromChannel, string toChannel, dateTime.iso8601 date) || 0.3 || 6 ||  ||  ||  ||
||  channel.software.uploadPackage(package) || 0.5 || 12 ||  ||  || This API provides the same basic function as rhnpush; therefore, it may be removed in a future update. ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: errata''' ||  ||  ||  ||  ||  ||
||  errata.findByCVE(string sessionKey, string cveName) || 0.3 || 3 ||  ||  || Retrieve errata based on CVE (e.g. CVE-2008-1233)  ||
||  errata.findByAdvisory(string sessionKey, string advisory) || 0.3 || 3 ||  ||  || Retrieve errata based on Advisory (e.g. RHSA-2008:0209) ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: kickstart''' ||  ||  ||  ||  ||  ||
||  kickstart.diff(string sessionKey, string kslabel1, string kslabel2) || 0.3 || 5 ||  ||  ||  ||
||  kickstart.getAdvancedOptions(string sessionKey, string kslabel) || 0.2 || 2 || skarmark ||  ||  ||
||  kickstart.setAdvancedOptions(string sessionKey, string kslabel) || 0.2 || 4 || skarmark ||  || Set it to what? Doesn't this need more than kslabel? ||
||  kickstart.setNetworkConnection(string sessionKey, boolean dhcp, string interface) || 0.3 || 3 ||  ||  || Set the network connection details.  If dhcp is true, dhcp will be utilized; otherwise, it will be static IP. ||
||  kickstart.setSELinux(string sessionKey, string kslabel, string enforcingMode) || 0.2 || 2 || skarmark ||  || Set the SELinux preference where enforcingMode is enforcing, permissive or disabled. ||
||  kickstart.enableConfigMgmt(string sessionKey, string kslabel) || 0.3 || 2 ||  ||  ||  ||
||  kickstart.disableConfigMgmt(string sessionKey, string kslabel) || 0.3 || 2 ||  ||  ||  ||
||  kickstart.enableRemoteCmds(string sessionKey, string kslabel) || 0.3 || 2 ||  ||  ||  ||
||  kickstart.disableRemoteCmds(string sessionKey, string kslabel) || 0.3 || 2 ||  ||  ||  ||
||  kickstart.setLocale(string sessionKey, locale, boolean useUtc) || 0.3 || 3 ||  ||  ||  ||
||  kickstart.getSoftwareList(string sessionKey) || 0.2 || 2 || jortel ||  ||  ||
||  kickstart.setSoftwareList(string sessionKey) || 0.2 || 3 || jortel ||  || What's the parameter? ||
||  kickstart.appendToSoftwareList(string sessionKey) || 0.3 || 2 ||  ||  ||  ||
||  kickstart.setActivationKeys(string sessionKey) || 0.3 || 4 || partha ||  || param? ||
||  kickstart.getActivationKeys(string sessionKey) || 0.3 || 2 || partha  ||  ||  ||
||  kickstart.listAssociatedFilePreservationLists(string sessionKey, string kslabel) || 0.4 || 3 ||  ||  || can we shorten this? ||
||  kickstart.setAssociatedFilePreservationLists(string sessionKey, fllabels) || 0.4 || 4 ||  ||  || can we shorten this? ||
||  kickstart.listAssociatedGPGAndSSLKeys(string sessionKey) || 0.3 || 3 ||  ||  ||  ||
||  kickstart.setAssociatedGPGAndSSLKeys(string sessionKey, descriptions) || 0.3 || 4 ||  ||  ||  ||
||  kickstart.listAllFilePreservationLists(string sessionKey) || 0.4 || 2 ||  ||  ||  ||
||  kickstart.createFilePreservationList(string sessionKey, label, list) || 0.4 || 3 ||  ||  ||  ||
||  kickstart.deleteFilePreservationList(string sessionKey, label) || 0.4 || 3 ||  ||  ||  ||
||  kickstart.listAllGpgAndSSLKeys(string sessionKey) ||0.3  || 2 ||  ||  || rename to listAllGPGAndSSLKeys to be consistent with others above ||
||  kickstart.listAllIpRanges(string sessionKey) || 0.2 || 3 || jsherrill  || done ||  List all ip ranges for all kickstarts ||
||  kickstart.listIpRanges(istring sessionKey, nt ksLabel) || 0.2 || 3 || jsherrill  || done || list ip ranges for a kickstart ||  
||  kickstart.addIpRange(string sessionKey, int ksLabel) || 0.2 || 4 || jsherrill  || done || ksLabel is an int? ||  
||  kickstart.findKickstartForIp(string sessionKey) || 0.2 || 3 || jsherrill     || done ||  ||  
||  kickstart.removeIpRange(string sessionKey, ksLabel, ip) || 0.2 || 3 || jsherrill ||done || ||  
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: monitoring''' ||  ||  ||  ||  ||  ||
||  monitoring.listProbes(sid) || 0.5 || 3 ||  ||  ||  ||
||  monitoring.getLatestProbeResults(sid) || 0.5 || 3 ||  ||  ||  ||
||  monitoring.getAllResults(sid, probe_id) || 0.5 || 3 ||  ||  ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: packages''' ||  ||  ||  ||  ||  ||
||  packages.getDetails(*,downloadURL)   || 0.5 ||  ||  ||  ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: schedule''' ||  ||  ||  ||  ||  ||
||  schedule.listAllActions(string sessionKey) || 0.4 || 3 ||  ||  ||  ||
||  schedule.cancelAction(string sessionKey, int actionId) || 0.4 || 3 ||  ||  ||  ||
||  schedule.listActionsForSystem(string sessionKey, int systemId) || 0.4 || 3 ||  ||  ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: supportuser''' || 0.6 ||  ||  ||  || TODO: A new API handler will be defined to support the [https://fedorahosted.org/spacewalk/wiki/Features/SupportUser SupportUser] feature.  Details will be coming as the content for Support user are finalized. ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: system''' ||  ||  ||  ||  ||  ||
||  system.listErrata(severity/type) || 0.3 || 4 ||  ||  ||  ||
||  system.provision(sid, kslabel, date) || 0.3 || 4 || skarmark ||  ||  ||
||  system.provision(sid, kslabel) || 0.3 || 1 || skarmark ||  ||  ||
||  system.diffToChannel(sid, chan_label) || 0.3 || 3 ||  ||  ||  ||
||  system.searchDevices(search-string) || 0.3 || 4 || jmatthews ||  || put under search.system.devices or system.search.devices ||
||  system.searchNetwork(search-string) || 0.3 || 4 || jmatthews ||  || ditto ||
||  system.createCustomValueKey() || 0.3 || 3 || || || ||


=== New Spacewalk 0.1 APIs ===

Below are APIs that have been included in Spacewalk 0.1, but that were not available for the Satellite 5.1 product; however, they will be incorporated in to a future Satellite release.

||  '''Task''' || '''Target Release''' ||  '''Estimate (hours)''' || '''Developer''' || '''Status''' || '''Notes''' ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: kickstart''' ||  ||  ||  ||  ||  ||
||  kickstart.list || 0.1 || 2 || jsherrill || Done ||  ||
||  kickstart.listscripts() || 0.1 || 2 || jsherrill || Done ||  ||
||  kickstart.addscript() || 0.1 || 3 || jsherrill || Done ||  ||
||  kickstart.deletescript() || 0.1 || 3 || jsherrill || Done ||  ||
||  kickstart.download() || 0.1 || 3 || jsherrill || Done ||  ||
||  kickstart.setKickstartTree(kslabel, tree_label) || 0.1 || 3 || skarmark || Done ||  ||
||  kickstart.setChildChannels(kslabel, array(chan_lablel)) || 0.1 || 3 || skarmark || Done ||  ||
||  kickstart.getPartioningScheme() || 0.1 || 2 || jortel || Done ||  ||
||  kickstart.setPartitioningScheme() || 0.1 || 3 || jortel || Done ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: org''' ||  ||  ||  ||  ||  ||
||  org.create || 0.1 || || dgoodwin || Done || ||
||  org.delete || 0.1 || || dgoodwin || Done || ||
||  org.listOrgs || 0.1 || || partha || Done || ||
||  org.listUsers || 0.1 || || partha || Done || ||
||  org.getDetails(orgName) || 0.1 || || partha || Done || ||
||  org.getDetails(orgId) || 0.1 || || partha || Done || ||
||  org.updateName || 0.1 || || partha || Done || ||
||  org.listChannelFamilyEntitlements || 0.1 || || dgoodwin || Done || ||
||  org.listChannelFamilyEntitlementsForOrg || 0.1 || || dgoodwin || Done || ||
||  org.setChannelFamilyEntitlements || 0.1 || || dgoodwin || Done || ||
||  org.listSystemEntitlements || 0.1 || || partha || Done || ||
||  org.listSystemEntitlementsForOrg || 0.1 || || partha || Done || ||
||  org.setSystemEntitlements || 0.1 || || dgoodwin || Done || ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: schedule''' ||  ||  ||  ||  ||  ||
||  schedule.listCompletedActions(sessionKey) || 0.1 || 2 || bbuckingham || Done ||  ||
||  schedule.listInProgressActions(sessionKey) || 0.1 || 2 || bbuckingham || Done ||  ||
||  schedule.listFailedActions(sessionKey) || 0.1 || 2 || bbuckingham || Done ||  ||
||  schedule.listArchivedActions(sessionKey) || 0.1 || 2 || bbuckingham || Done ||  ||
||  schedule.listCompletedSystems(sessionKey, aid) || 0.1 || 2 || bbuckingham || Done ||  ||
||  schedule.listInProgressSystems(sessionKey, aid) || 0.1 || 2 || bbuckingham || Done ||  ||
||  schedule.listFailedSystems(sessionKey, aid) || 0.1 || 2 || bbuckingham || Done ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: system''' ||  ||  ||  ||  ||  ||
||  system.listInactiveSystems(date) || 0.1 || 2 || jsherrill || Done ||  ||
||  system.whoRegistered(sid) || 0.1 || 1 || jsherrill || Done ||  ||
||  system.listSystemsWithPackage(id) || 0.1 || 3 || jsherrill || Done ||  ||
||  system.listSystemsWithPackage(name, version, release, epoch) || 0.1 || 3 || jsherrill || Done ||  ||
||  system.listVirtHosts() || 0.1 || 2 || jsherrill || Done ||  ||
||  system.listVirtGuests(sid) || 0.1 || 2 || jsherrill || Done ||  ||
||  system.setGuestMemory(sid, memory) || 0.1 || 2 || jsherrill || Done ||  ||
||  system.setGuestCpus(sid, cpus) || 0.1 || 2 || jsherrill || Done ||  ||
||  system.scheduleGuestAction(sid, state) || 0.1 || 4 || jsherrill || Done ||  ||
||  system.deleteSnapshot(sid, snapId) || 0.1 || 5 || jsherril || Done ||  ||
||  system.deleteSnapshots(sid) || 0.1 || 5 || jsherrill || Done ||  ||
||  system.listSnapshots(sid) || 0.1 || 5 || jsherrill || Done ||  ||
||  system.listSnapshotPackages(snapid) || 0.1 || 5 || jsherrill || Done ||  ||
||  system.listSnapshotConfigFiles(snapid) || 0.1 || 5 || jsherrill || Done ||  ||
||  system.getOsadStatus(sid) (system.getDetails()) || 0.1 || 2 || jsherrill || Done ||  ||
||  ----   ||  ||  ||  ||  ||  ||
||  '''Namespace: systemgroup''' ||  ||  ||  ||  ||  ||
||  systemgroup.listActiveSystemsInGroup(group) || 0.1 || 3 || jsherrill || Done ||  ||
||  systemgroup.listInActiveSystemsInGroup(group) || 0.1 || 3 || jsherrill || Done ||  ||
