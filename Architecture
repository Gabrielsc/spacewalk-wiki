= Project Architecture =

Spacewalk consists of several languages and has a classic [http://en.wikipedia.org/wiki/Multitier_architecture three-tier architecture]. The presentation tier consists of both a web UI, command line clients, and XML-RPC clients (which can in turn be command line or even full blown web applications). Behind the presentation tier lies the logic tier, which in Spacewalk is spread across the four languages: Java, perl, python, and PL/SQL. While at first one might think "Wow! that's a lot of duplicate code." In reality, there's only a small bit of code that overlaps between the languages, more so between the Java and perl stacks. Finally, the last tier, the data tier, is backed by an [http://www.oracle.com/index.html Oracle] database (at least at the moment, there are [TheRoadmap plans for other databases]).

[[Image(arch.png)]]

=== Web UI ===
The web UI, which until recently consisted entirely of perl running through an [http://httpd.apache.org/ Apache web server], now is a mixture of perl as well as Java technologies. Several years ago, a Java migration was started and most of the commonly used features of the application have been migrated. In general, the perl pages are only modified to fix bugs or to support the new features in the Java side. Any new web UI development is being done in Java.

For a more in depth explanation of the Java side, check out the [JavaDesign Java design doc]. Also, look at [PerlStack perl design doc] for more information on the perl side of the application.

=== Frontend Api ===
The frontend api is written completely in Java and runs in [http://tomcat.apache.org/ Tomcat] within the webapp.  Because of this, the manager layer is shared between the two.  This interface is intended to be used by scripts and other programs to provide interoperability with satellite or to simply help automate tasks.  The goal here is to at least allow everything that can be done within the UI to be done in through this api.  Docs are provided on the url /rhn/apidoc/index.jsp .


=== Backend === 
The backend provides a set of APIs that the different client utilities (rhn_register, up2date, yum) can connect to. These are not documented and generally are solely used by the client utilities.


=== Taskomatic ===
Taskomatic is written in Java (being able to take advantage of the same manager layer as the rest of the Java apps) and runs as a separate daemon.  It's job is to perform tasks that are scheduled to run asynchronously, such as sending out email notifications for new errata.  

=== Search Server ===
The Search Server is a standalone daemon that is fairly new to the project.  It is written in Java and utilizes Apache's [http://lucene.apache.org/ Lucene] search technology.  