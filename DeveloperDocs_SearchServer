= SearchServer - Developer Notes =
== Overview ==
The spacewalk webui performs searches through a XMLRPC interface to a separate java process, which we call "!SearchServer".[[BR]]
This !SearchServer uses [http://lucene.apache.org Lucene] for the search engine.
* Input:  XMLRPC message, generally a query in LuceneQueryParser syntax
* Output: List of matches with score/rank, highest scoring matches on top

=== Basic Operations ===
==== Index ====
Upon start up !SearchServer reads the database table, "rhnIndexerWork" to determine what has been indexed previously.  Each row corresponds to a different object_type, ex: {errata, packages, systems}.   Once !SearchServer knows the last time the index operation ran, and the last id it indexed, it asks the database for objects which are new and/or modified since then.   These new objects get indexed by lucene.
==== Retrieval ====
When a request comes in through XMLRPC and matches the "index" namespace, lucene is used to search the indexes for a match.  
* Format of message:  
 * Session ID  - corresponds to logged in user id
 * Index name  - 
 * Query 
"com.redhat.satellite.search.index.IndexManager::search"


=== XMLRPC ===
 * Namespace: index  
 * Handler: com.redhat.satellite.search.rpc.handlers.IndexHandler
  * Description:  
 * Namespace: db  
 * Handler: com.redhat.satellite.search.rpc.handlers.DatabaseHandler
  * Description
 * Namespace: admin  
 * Handler:com.redhat.satellite.search.rpc.handlers.AdminHandler
  * Description
=== Lucene ===
=== Database ===




== Howto Build/Run ==
== Configuration ==
* Resides in git at: spacewalk/search-server/src/config/rhn-search.conf
 * Is installed on a target machine at: /etc/rhn/search/rhn-search.conf
* Example
{{{
search.index_work_dir=/usr/share/rhn/search/indexes
search.rpc_handlers=index:com.redhat.satellite.search.rpc.handlers.IndexHandler,db:com.redhat.satellite.search.rpc.handlers.DatabaseHandler,admin:com.redhat.satellite.search.rpc.handlers.AdminHandler
search.max_hits_returned=500
search.connection.driver_class=oracle.jdbc.driver.OracleDriver
search.score_threshold=.10
search.system_score_threshold=.01
search.errata_score_threshold=.20
search.errata.advisory_score_threshold=.30
search.min_ngram = 1
search.max_ngram = 5
search.doc.limit_results = false
search.schedule.interval = 300000
search.log.explain.results = false
}}}
 * search.index_work_dir  : Specifies where Lucene indexes are kept
 * search.rpc_handlers  : ";" list of classes to act as handlers for XMLRPC calls.   
 * satellite.search.rpc.handlers.AdminHandler
 * search.max_hits_returned=500
 * search.connection.driver_class=oracle.jdbc.driver.OracleDriver
 * search.score_threshold=.10
 * search.system_score_threshold=.01
 * search.errata_score_threshold=.20
 * search.errata.advisory_score_threshold=.30
 * search.min_ngram = 1
 * search.max_ngram = 5
 * search.doc.limit_results = false
 * search.schedule.interval = 300000
 * search.log.explain.results = false


== Specific Areas ==
=== Package Search ===
=== Errata Search ===
=== System Search ===
=== Documentation Search ===
== Misc Notes ==
* Security Limitations
 * !SearchServer does little limiting of results to user permissions, it is expected that the webui/api will handle user/org permission filtering.   Typically this handled automatically in the webui/api code when we "flesh" out a DTO from the list of ids.  
* Results limited to top 500
 * If you run a query which returns 3000 results, only the top 500 are returned.  This could create a problem for large installs with many organizations.  Since !SearchServer is not aware of organization trust/sharing, it will blindly rank the 3000 results based on highest score, this could mean that it returns 0 results which are visible to the current user.  [https://bugzilla.redhat.com/show_bug.cgi?id=515795 bz515795]


