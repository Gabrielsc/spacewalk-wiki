Below are the instructions on how to setup your workstation to make changes and contribute to Spacewalk.

=== Setup Spacewalk on Fedora 9 ===  
NOTE: Still Under construction try the Java Side fo things and Perl side of things until these instructions become stable..
 * install oracle express edition [https://fedorahosted.org/spacewalk/wiki/OracleXeSetup OracleXeSetup]
 * get Oracle instant client rpms: [http://www.oracle.com/technology/software/tech/oci/instantclient/htdocs/linuxsoft.html instantclient.rpm]
[http://www.oracle.com/technology/tech/oci/instantclient/index.html Oracle Instant Client homepage]

 install oracle-instantclient-basic and oracle-instantclient-devel

 * edit /etc/yum.repos.d/spacewalk-support.repo
 {{{
 [spacewalk-support]
 name=Spacewalk Support $releasever - $basearch
 failovermethod=priority
 baseurl=http://transam.devel.redhat.com/yum/fedora/$releasever/$basearch/
 enabled=1
 gpgcheck=0
 gpgkey=
 }}}
 * yum install spacewalk-legacy-metadata-workstation spacewalk-java-metadata-workstation

 * checkout source code [GIT command here]

 * create schema in database
 * build java code
 ** cd GITDIR/java/
 ** ant clean all
 ** ant create-webapp-dir
 ** NOTE: should work on all one line, problem with ivy, needs fixing.

 * setup perl
 ** sudo /sbin/service satellite-httpd start
 *** might have to comment out ssl.conf from httpd.conf
 *** NOTE: remember to set your ORACLE_HOME: /etc/sysconfig/satellite-httpd, if using Oracle XE set it to : /usr/lib/oracle/xe/
 *** also add LD_LIBRARY_PATH entry: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/oracle/10.2.0.4/client/lib/

 * setup python

 * setup symlinks
 ** cd GITDIR/satellite/
 ** export GITDIR=/your/git/checkout
 ** sudo -E ./setup-symlinks.sh

 * configure
 ** setup hibernate database connection using jdbc logdriver: 
 {{{
 hibernate.connection.username=spacewalk
 hibernate.connection.password=spacewalk
 hibernate.connection.url=jdbc:log:oracle.jdbc.driver.OracleDriver:oracle:thin:@localhost:1521:xe
 hibernate.connection.driver_class=net.rkbloom.logdriver.LogDriver
 }}}

 ** setup hibernate database connection using oracle driver: 
 {{{
 hibernate.connection.username=spacewalk
 hibernate.connection.password=spacewalk
 hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:xe
 #hibernate.connection.driver_class=net.rkbloom.logdriver.LogDriver
 }}}
 ** setup perl/python database connection:
 {{{ web.default_db=spacewalk/spacewalk@xe }}}


 * start services
 ** sudo /sbin/service tomcat5 start

=== COMMON PROBLEMS ===
 * homedir is not readable by tomcat / apache users
 * tomcat spews a bunch of errors about not finding digester and other xml errors (not related to webapp) SOLUTION: sudo rpm -e --nodeps tomcat5;  sudo yum -y install tomcat5
 * Acquisition Attempt Failed!!! SOLUTION: setup database connections


=== Java Setup ===
 * sudo yum install tomcat5  java-1.6.0-openjdk-devel java-1.6.0-openjdk ant ant-nodeps jakarta-commons-cli jakarta-commons-codec oro 
 * sudo rpm -Uvh http://barn.rhndev.redhat.com/repo/repository/ivy/ivy-1.3.1-1jpp.noarch.rpm
 * sudo rpm -Uvh http://barn.rhndev.redhat.com/repo/repository/ivy/ivy-javadoc-1.3.1-1jpp.noarch.rpm
 * sudo /usr/sbin/alternatives --config java  -> make sure its using open jdk and NOT gcj
 * sudo /usr/sbin/alternatives --config javac  -> make sure its using open jdk and NOT gcj

 * Checkout the Satellite/Spacewalk source code: http://wiki.rhndev.redhat.com/wiki/Git_Guide
 * export SATSOURCE=/YOUR/GIT/CHECKOUT/
 ** Be sure to add to your ~/.bash_profile. (or equivalent)

 * sudo ln -s $SATSOURCE/java/conf/rhn.xml /usr/share/tomcat5/conf/Catalina/localhost/rhn.xml
 * sudo ln -s $SATSOURCE/java/buildconf/builder/config/satellite /etc/rhn
 * For the above 2 symlinks you need to make sure the tomcat user can access those paths.  Make sure if you 'su tomcat' and run 'cat /usr/share/tomcat5/conf/Catalina/localhost/rhn.xml' that it shows the correct content.
 * cd $SATSOURCE/java/
 * ant clean all  <- This should complete successfully 
 * ant create-webapp-dir <- This should complete successfully
 * rm rhnwebapp/WEB-INF/lib/jasper5* <- Alternatively we can remove this entry from ivy.xml ?? Yet to check that.
 * sudo ln -s $SATSOURCE/java/rhnwebapp /usr/share/tomcat5/webapps/rhn
 * service tomcat5 restart


Thats it :) ..

=== Perl Setup === 
 * yum install compat-libstdc++-33
 * rpm -Uvh http://barn.rhndev.redhat.com/repo/repository/oracle-instantclient/oracle-instantclient-basic-10.2.0-6.i386.rpm
 * rpm -Uvh http://barn.rhndev.redhat.com/repo/repository/oracle-instantclient/oracle-instantclient-config-10.2.0-7.i386.rpm
 * yum install perl-Algorithm-Diff perl-Bit-Vector perl-Cache-Cache perl-Carp-Clan  perl-Class-ErrorHandler perl-Class-Loader perl-Class-Singleton  perl-Convert-ASCII-Armour perl-Convert-ASN1 perl-Convert-PEM perl-Crypt-Blowfish perl-Crypt-CBC perl-Crypt-DES perl-Crypt-DES_EDE3 perl-Crypt-DSA perl-Crypt-Primes perl-Crypt-Random perl-Crypt-RSA perl-Crypt-SSLeay perl-Data-Buffer perl-Date-Calc perl-DateManip perl-DateTime perl-DateTime-Format-Mail perl-DateTime-Format-W3CDTF perl-Devel-Symdump perl-Digest-MD2 perl-Error perl-Frontier-RPC perl-IPC-ShareLite perl-libxml-perl perl-Mail-RFC822-Address perl-MailTools perl-Math-Pari perl-MIME-Lite perl-Parse-Yapp perl-Proc-Daemon perl-RPM2 perl-SOAP-Lite perl-Sort-Versions perl-TermReadKey perl-Test-Manifest perl-Text-Diff perl-Tie-EncryptedHash perl-TimeDate perl-Unix-Syslog perl-XML-Dumper perl-XML-Grove perl-XML-LibXML perl-XML-LibXML-Common perl-XML-LibXSLT perl-XML-NamespaceSupport perl-XML-RSS perl-XML-SAX perl-XML-Simple perl-XML-Twig perl-XML-Writer perl-YAML perl-libapreq2 perl-DBI perl-Apache-DBI  perl-Authen-PAM  perl-Authen-DigestMD5  perl-Authen-Krb5 perl-Digest-SHA perl-Digest-HMAC mod_perl mod_python

 * rpm -Uvh http://dually.rdu.redhat.com/pub/perl-DBD-Oracle-1.19-4.rhel4.i386.rpm
 * rpm -Uvh http://dually.rdu.redhat.com/pub/perl-Set-Crontab-1.00-12.fc9.noarch.rpm
 * rpm -Uvh http://dually.rdu.redhat.com/pub/perl-Schedule-Cron-Events-1.8-11.fc9.noarch.rpm
 * cd /usr/lib/httpd/modules
 * wget http://www.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/linux/jk-1.2.26/i386/mod_jk-1.2.26-httpd-2.2.6.so
 * ln -s  mod_jk-1.2.26-httpd-2.2.6.so  mod_jk.so
 * check out 
svn+ssh://svn.rhndev.redhat.com/svn/rhn-svn/trunk/eng/satellite under $SVNDIR/eng
 * chmod 700 $SVNDIR/eng/satellite/fedora/setup-symlinks.sh
 * cd $SVNDIR/eng/satellite/fedora/
 * ./setup-symlinks.sh  <- This should setup all your symlinks...
 * service httpd start  <- NOTE its no longer service satellite-httpd start!, because we are utilizing conf.d entry..

=== How to test this ===
 * http://<your web server>

=== Python Setup ===
 * Make sure rhnlib is installed, 
  * sudo yum install rhnlib  (or) 
  * ln -s  $SATSOURCE/client/rhel/rhnlib/rhn /usr/lib/pythonx.y/site-packages/rhn
 * Other required dependencies to check: PyXML mod_python mod_ssl python-optik python-gzipstream
 * Create simlinks 
  * ln -s $SATSOURCE/backend/server /usr/share/rhn/server
  * ln -s $SATSOURCE/backend/common /usr/share/rhn/common
  * ln -s $SATSOURCE/backend/satellite_tools /usr/share/rhn/satellite_tools
  * ln -s $SATSOURCE/backend/upload_server   /usr/share/rhn/upload_server
  * simlink config files $SATSOURCE/backend/rhn-conf/*.conf to /etc/rhn/default/*.conf
 * service httpd restart and things should start working

=== Distributed Setup ===
If you want to have one workstation for perl and one work station for java, follow the steps for Perl and java setup on those machines and then change the line below/etc/rhn/satellite-httpd/conf/workers.properties 
{{{worker.ajp13.host=localhost}}} to {{{worker.ajp13.host=<your machine>}}}
