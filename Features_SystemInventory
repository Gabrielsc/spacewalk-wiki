= System Inventory =

=== Reviewed by: ===

== Overview ==

This feature refers to our ability to correctly identify the operating system, version, and virtualization capabilities/status of hosts registered to Spacewalk. 

== Requirements ==

 1. Identify the following operating systems and versions:
  1. Red Hat Enterprise Linux: 4 (AS, ES, ...), 5 (Server, Desktop)
  1. Fedora (10+)
  1. CentOS (4, 5)
  1. Solaris (all currently supported versions TBD)
  1. "Unknown" system (for everything we can't identify)
 1. System architecture: x86, x86_64, ppc, s390x, etc.
 1. Virtualization Status
  1. Virtualized guest (Xen, KVM, VMware)
    1. Can we also detect VMWare, IFL, and Hyper-V guests?
    1. Identify and associate with host system.
      1. Deal with scenario where host system is not registered.
      1. Deal with scenario where host system is registered but not to the same Spacewalk/Satellite.
  1. Virtualization capable host (Xen full/para-virt, KVM full-virt)
 1. Idenfity number of CPUs and CPU cores.
 1. API should allow mining of data for permutiations of hardware, OS, virt capabilities/state, and system grouping (?).


== Other Feature Impact ==

TBD

== Proposed Implementation ==

 1. Create new client side Python library whose sole purpose is to identify the information above.
  1. Modify RHN client tools to require this library as a dependency. (implies this must be added to base installs of RHEL)
  1. Separate library to allow for re-use in candlepin.
 1. Modify client tools to use new library and supply this information to Spacewalk/Satellite very early during registration.
  1. Must not require this if communicating with hosted.
 1. Schema
  1. Modify to store this information in a format that can accommodate future changes or additions.
 1. Backend
  1. Accept the new incoming data, populate database.
  1. Again, ensure this happens before entitlement checks.
 1. Web UI
  1. Display new data prominently.
  1. Allow for searching/filtering. 

=== Known Issues ===

 * How do we populate this information for pre-existing systems on an upgraded install?
 * Can an administrator manually override the data our library determine to be accurate in the UI?

=== Future Enhancements ===

 * Moving our existing hardware detection code into this library seems like a good idea.

== Mockups ==

Mockups needed for UI changes.

== Tasks ==


|| Description || Estimate || Confidence ||
||  || || ||
||  || || ||

== Test Notes ==


== Risks/Concerns ==

