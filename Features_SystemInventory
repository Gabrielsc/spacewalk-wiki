= System Inventory =

=== Reviewed by: ===

== Overview ==

This feature refers to our ability to correctly identify the operating system, version, and virtualization capabilities/status of hosts registered to Spacewalk. 

== Requirements ==

 1. Identify the following operating systems and versions:
  1. Red Hat Enterprise Linux: 4 (AS, ES, ...), 5 (Server, Desktop)
  1. Fedora (10+)
  1. CentOS (4, 5)
  1. Solaris ('''TODO''': what versions do we want to support?)
  1. "Unknown" system (for everything we can't identify)
 1. System architecture: i386, i686, x86_64, ppc, s390x, etc. 
 1. Virtualization Status
  1. Virtualized guest (Xen, KVM, VMware)
    1. Can we also detect IFL, and Hyper-V guests?
    1. Identify and associate with host system.
      1. '''TODO''': Is this possible? Safe?
      1. Deal with scenario where host system is not registered.
      1. Deal with scenario where host system is registered but not to the same Spacewalk/Satellite.
  1. Virtualization capable host (Xen full/para-virt, KVM full-virt)
 1. Idenfity number of CPUs and CPU cores.
 1. Allow searching of this data in web UI.
  1. '''TODO''': Need examples of specific searches to see where to go with this. Take a look at current advanced search screen to see what we have to work with.
 1. API should allow mining of data for permutiations of hardware, OS, virt capabilities/state, and system grouping (?).
  1. '''TODO''': Need examples.


== Other Feature Impact ==

TBD

== Proposed Implementation ==
 1. Add dependency on smolt to rhn-setup.
  1. Will require the smolt package now be available in base RHEL?
  1. Might require a rebuild as default smolt package is configured to automatically submit (monthly) to smolt.org in an rpm post script, whereas we just want to leverage the client side bits.
 1. Modify client side hardware code to leverage smolt bits to lookup required info about the system.
  1. Watchout for dead code, Smolt was originally based on our client side code.
 1. Submit data to Spacewalk. 
  1. Not sure how to do this, need to examine how we pass over the hardware info today, and how smolt does the same. No intention to run the smolt server side (smoon).
 1. Schema
  1. Modify to store this information in a format that can accommodate future changes or additions.
  1. Sync up with existing storage of architecture, CPU info.
  1. Investigate smoon data model.
 1. Backend
  1. Accept the new incoming data, populate database. Hooking into registration process should cover us for fresh registrations and kickstart re-registrations. Do we also need to periodically refresh for hardware changes?
  1. Need to ensure this information is available before doing entitlement checks.
  1. Must support older clients that are missing these new capabilities.
 1. Web UI
  1. Under Systems -> (system) -> Details -> Overview in the "System Info" section:
   1. Add "Operating System". (Fedora 10, Red Hat Enterprise Linux 5 Server, CentOS 5)
   1. Already display if system if a para-virt host/guest, update to include include KVM and clearly differentiate between the two.
  1. Under Systems -> (system) -> Details -> Hardware:
   1. Update General section with number of CPU cores.
   1. Add virtualization section, display virtualization capabilities.  (KVM, Xen full-virt, Xen para-virt)
  1. Allow for searching/filtering, expand search interface "Field to Search" to include:
   1. Operating System
   1. Virtualization Capabilities (Xen/KVM?)
   1. Guest systems (somehow...)
   1. Host systems (somehow)
 1. API
  1. Allow for searching for various permutations of the new pieces of inventory information. 
  1. '''TODO''': Specific API calls to implement.
 1. Allow admins to specify custom channels as the default for a particular version of an operating system.
  1. This would allow Spacewalk users to create their Fedora or Cent OS channels, and then automatically register systems to then without the need for an explicit activation key. (similar to the way we auto-subscribe to RHEL channels in Satellite, which may also be a candidate for cleanup)

=== Known Issues ===

 * How do we populate this information for pre-existing systems on an upgraded install?
 * Can an administrator manually override the data our code determines to be accurate in the UI?

=== Future Enhancements ===

== Mockups ==

'''TODO'''

== Tasks ==


|| Description || Estimate || Confidence ||
||  || || ||
||  || || ||

== Test Notes ==

 * RHN client tools do not currently have much in the way of unit test framework, these will largely be left to manual testing.
 * Backend code unit tests can be used to cover new logic. 
 * Java web UI and API can be tested using existing unit test and API test framework respectively.

== Risks/Concerns ==

 * If we go the route of re-using smolt, will probably need to submit some patches to add some of the data we're interested in.
 * Replacing our hardware/OS detection with the more recent smolt code would require a bit of work and a lot of testing in the client side tools, CLI, GUI, and TUI.
  * What happens with respect to hosted if we start messing around with the client side packages? Information going up to the server may have to remain exactly the same, although perhaps with additions which the server can gracefully ignore if it's not ready for the new.

