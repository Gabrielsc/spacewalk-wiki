= Intro =

The below instructions are how to install Spacewalk into a Red Hat Enterprise Linux 5 server.  Future versions will include instructions and support for Fedora and other Linux variants.

= Oracle Pre-Requisites =

In order to get Spacewalk to run it needs to point itself at a Oracle 10g database server.  The easiest way todo this is to install Oracle XE.  Instructions on how todo this can be found here:

[OracleXeSetup Oracle XE Setup instructions]

= EPEL Repo setup =

Spacewalk requires a Java Virtual Machine with version 1.6.0 or greater.  [http://fedoraproject.org/wiki/EPEL EPEL - Extra Packages for Enterprise Linux] contains a version of the openjdk that works with spacewalk.  To get packages from EPEL just install this RPM:

{{{
rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-2.noarch.rpm
}}}


= Installation =

RPM downloads of the project are available through a yum repository

  * http://spacewalk.redhat.com/yum

To use this repository, add a file in yum.repos.d (e.g. /etc/yum.repos.d/spacewalk.repo) with the following contents:

{{{
[spacewalk]
name=Spacewalk
baseurl=http://spacewalk.redhat.com/yum/rhel/$releasever/$basearch/
gpgkey=http://www.redhat.com/spacewalk/yum/rhel/$releasever/$basearch/RPM-GPG-KEY-spacewalk
enabled=1
gpgcheck=1
}}}

Then just ask yum to install the application:

{{{
yum install spacewalk
}}}

This will pull down and install the set of RPMs required to get spacewalk to run.  You may get a conflict from '''rhns''' with specspo.  If so, just do a:

{{{
rpm -e specspo && yum install spacewalk
}}}

Once the spacewalk rpm is installed you need to configure the application.  To do this, run:

{{{
spacewalk-setup --disconnected
}}}

This will prompt you for questions about your database configuration and spacewalk certificate location.

An example session is as follows:

{{{
[root@fjs-0-11 tmp]# spacewalk-setup --disconnected
* Loading answer file: /usr/share/spacewalk/setup/defaults.conf.
* Setting up environment and users.
** GPG: Initializing GPG and importing RHN key.
* Setting up database.
** Database: Setting up database connection.
DB User? spacewalk
DB Password? 
DB SID? xe
DB hostname? localhost
DB port [1521]? 
DB protocol [TCP]? 
** Database: Testing database connection.
** Database: Populating database.
sh: dbhome: command not found
*** Progress: ###################################################################
You must enter an email address.
Admin Email Address? tito@example.com
* Performing initial configuration.
* Activating Satellite.
** Loading Satellite Certificate.
** Verifying certificate locally.
** Activating Satellite.
* Enabling Monitoring.
* Creating SSL certificates.
CA certificate password? 
Re-enter CA certificate password? 
Organization? Tito Puente Solutions
Organization Unit [fjs-0-11.example.com]? 
Email Address [tito@example.com]? 
City? Raleigh
State? NC
Country code (Examples: "US", "JP", "IN", or type "?" to see a list)? US
** SSL: Generating CA certificate.
** SSL: Deploying CA certificate.
** SSL: Generating server certificate.
** SSL: Storing SSL certificates.
Use of uninitialized value in chown at /usr/bin/rhn-generate-pem.pl line 57.
Use of uninitialized value in chown at /usr/bin/rhn-generate-pem.pl line 57.
* Deploying configuration files.
* Update configuration in database.
* Restarting services.
Installation complete.
Visit https://fjs-0-11.example.com to create the satellite administrator account.
}}}

After spacewalk-configure is complete your application is ready to go!
'''Be sure to use the FQDN of the host when you connect.'''

You can also find source RPMs and tarballs at the following URL:
   * http://spacewalk.redhat.com/source

= Current set of TODO/potholes =

Need these 2 environment variables:

{{{
# export ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/
# export PATH=$PATH:/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/
}}}


You may need to adjust selinux (or disable it) if you encounter this error:

{{{
Could not connect to the database.  Your connection information may be incorrect.  Error: install_driver(Oracle) failed: Can't load '/usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi/auto/DBD/Oracle/Oracle.so' for module DBD::Oracle: /usr/lib/oracle/10.2.0/client/lib/libnnz10.so: cannot restore segment prot after reloc: Permission denied at /usr/lib/perl5/5.8.8/i386-linux-thread-multi/DynaLoader.pm line 230, <STDIN> line 6.
 at (eval 784) line 3
Compilation failed in require at (eval 784) line 3, <STDIN> line 6.
Perhaps a required shared library or dll isn't installed where expected
 at /usr/bin/spacewalk-setup line 1504
}}}

The following commands can be used to give Oracle proper selinux permissions: (NOTE: CURRENTLY UNTESTED)

{{{
semanage fcontext -a -t textrel_shlib_t '/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib/*'
restorecon -R /usr/lib/oracle/xe/app/oracle/product/10.2.0/server/lib
}}}

During spacewalk-setup, you will be prompted for a satellite certificate, if you do not already have access to one you can generate one by following CertCreation.

The dependency for the "concurrent" package is not getting processed properly. Until we can get this dependency right in rhn-java-sat:

{{{
yum install concurrent
}}}