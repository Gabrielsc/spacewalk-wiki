== Navigation ==

=== Main navigation (top bar and left side bar) ===
Spacewalk has three navigation menu bars: topnav, left nav, and dialog nav. The top nav is the one you see at the top of every page. It is used to navigate to the main pages of the application.

[[Image(wiki:NavigationSystem:topnav.png)]]

The left nav is located, you guessed it, on the left and offers a more detailed level of navigation under the main tab.

[[Image(wiki:NavigationSystem:leftnav.png)]]

These navigation bars are handled by two files:

 * sitenav-authenticated.xml  (for authenticated sessions)
 * sitenav.xml (for sessions that have not logged in)

Each of these files exist in perl and java (and both are independent). The java versions are in {{{/eng/java/code/webapp/WEB-INF/nav}}} and the perl versions are in {{{/eng/web/html/nav/}}}.

Looking at /eng/java/code/webapp/WEB-INF/nav/sitenav-authenticated.xml, it is pretty self explanatory.  The following tags are valid:

||rhn-tab ||Defines a tab within the navigation bars.
||rhn-tab-url || Used when specifying more than one url that corresponds to a tab. (When a user is browsing to that url, the tab will be shaded to indicate it is active).
||rhn-tab-directory ||Used to specify a directory from which to match urls.

Each tag has a set of attributes:
|| '''Tag'''     || '''Attribute''' || '''Description''' ||
|| '''rhn-navi-tree''' || label || internal label used by parser ||
||               || title-depth || how deep in the tree to parse to generate the title of the page ||
||               || invisible || 1 if you want to hide the top level of the navigation used by sub-navigation files ||
||               || formvar || sets the default formvar to be added to all urls ||
||               || acl-mixins || a comma separated list of fully qualified ACLHandler classnames ||
||               ||            || ||
|| '''rhn-tab''' || name || i18n key used to lookup the label shown in the UI for this tab. Maybe plain English i.e. Errata, or channel.nav.all, as long as it maps to a !StringResource value. ||
||         || url || the url, usually relative, where the tab is to link ||
||         || acl || the [#ACLs ACL] guarding the tab, used to conditionally display the tab ||
||         || active-image || image filename used to highlight the tab when active (selected)  ||
||         || inactive-image || image filename used to highlight the tab when inactive (unselected)  ||
||         || on-click || '''PERL ONLY''' calls the specified perl module when clicked ||
||               ||            || ||
|| '''rhn-tab-url''' || NONE  || this takes in a value of url no attributes {{{<rhn-tab-url>/rhn/account/EditAddress.do</rhn-tab-url>}}} ||
||               ||            || ||
|| '''rhn-tab-directory''' || NONE  || this takes in a value of url no attributes {{{<rhn-tab-directory>/rhn/users</rhn-tab-directory>}}} ||

Below is a sample sitenav file.

{{{
#!xml
<?xml version="1.0" encoding="UTF-8"?>
<rhn-navi-tree xmlns:xi="http://www.w3.org/2001/XInclude" label="sitenav" title-depth="0"
  acl_mixins="com.redhat.rhn.common.security.acl.MonitoringAclHandler">
  <rhn-tab name="Overview" url="/rhn/YourRhn.do" active-image="tab-your_rhn-selected.gif" inactive-image="tab-your_rhn.gif">
    <rhn-tab name="Overview" url="/rhn/YourRhn.do"/>
    <rhn-tab name="Your Account" url="/rhn/account/UserDetails.do" >
      <rhn-tab name="Addresses">
        <rhn-tab-url>/rhn/account/Addresses.do</rhn-tab-url>
        <rhn-tab-url>/rhn/account/EditAddress.do</rhn-tab-url>
      </rhn-tab>
      <rhn-tab name="Change Email" url="/rhn/account/ChangeEmail.do" />
      <rhn-tab name="Account Deactivation" url="/rhn/account/AccountDeactivation.do"/>
    </rhn-tab>
    <rhn-tab name="Your Preferences" url="/rhn/account/UserPreferences.do" />
    <rhn-tab name="Locale Preferences" url="/rhn/account/LocalePreferences.do" />
    <rhn-tab name="Subscription Management" url="/rhn/systems/SystemEntitlements.do" acl="user_role(org_admin)" >
      <rhn-tab name="System Entitlements" url="/rhn/systems/SystemEntitlements.do" acl="user_role(org_admin)" />
      <rhn-tab name="virtualization.entitlements" url="/rhn/systems/entitlements/GuestLimitedHosts.do" acl="user_role(org_admin)"/>
      <rhn-tab name="Software Channel Entitlements" url="/rhn/channels/software/Entitlements.do" acl="user_role(org_admin)" />
    </rhn-tab>
    <rhn-tab name="Organization Trusts" url="/rhn/multiorg/Organizations.do" acl="user_role(org_admin)">
        <rhn-tab-url>/rhn/multiorg/OrgTrustDetails.do</rhn-tab-url>
        <rhn-tab-url>/rhn/multiorg/channels/Consumed.do</rhn-tab-url>
        <rhn-tab-url>/rhn/multiorg/channels/Provided.do</rhn-tab-url>
    </rhn-tab>
  </rhn-tab>
</rhn-navi-tree>
}}}

=== Sub-navigation ===
On many pages (System details page, Channel detail page, etc..) there is a tab bar within the page.  These are defined by files within separate files from the sitenav.xml and sitenav-authenticated.xml.  Within the same directories listed above are files called:

 * action_detail.xml
 * channel_detail.xml
 * system_detail.xml
 * and others like them

These files are exactly like the sitenav navigation files, but contain information only for these sub-navigation bars.


=== ACLs ===

=== Java side acls ===
To control whether a tab is displayed at a certain time or not, you can use the built in ACLs (or make your own).  Within an rhn-tab tag, simply specify acl="name(arg)".  For example within sitenav-authenticated.xml:

{{{
 <rhn-tab name="Users" url="/rhn/users/ActiveList.do" acl="org_entitlement(sw_mgr_enterprise); user_role(org_admin)" 
  active-image="tab-users-selected.gif" inactive-image="tab-users.gif">
}}}

Here this Users tab would not be shown if either {{{org_entitlement(sw_mgr_enterprise)}}} or {{{user_role(org_admin)}}} returns false.  Both of these are defined in {{{com.redhat.rhn.common.security.acl.Access}}}.  The name {{{org_entitlement}}} is translated into {{{aclOrgEntitlement()}}} when calling the acl, so {{{Access.aclOrgEntitlement()}}} is invoked.

Additional ACL classes exist for the sub-tab xml files.  Within [http://spacewalk.redhat.com/documentation/javadoc/com/redhat/rhn/common/security/acl/package-summary.html com.redhat.rhn.common.security.acl] exists several handlers such as !ChannelAclHandler, !ErrataAclHandler.  These are used with their corresponding X_detail.xml file.  For example, the !ChannelAclHandler is for use with channel_detail.xml.

=== ACLs on the Perl side ===
The ACLs are handled in a similar fashion on the Perl side. The ACL syntax used for rhn-tab in Perl is the same as is on the Java side. The difference is where the code is found, the {{{com.redhat.rhn.common.security.acl.Access}}} equivalent in Perl is {{{RHN::Access}}}.

Mappings between ACL statements and Perl sub-routines is more direct. {{{org_entitlement(sw_mgr_enterprise)}}} maps to {{{RHN::Access->org_entitlement}}}.
