= Introduction =

In light of the feedback we've received after open sourcing and a surprising number of volunteers in the community coming forward, we're pleased to begin gathering feedback and attempting to organize the effort to break Spacewalk's dependency on Oracle and add support for PostgreSQL.

While quite universally agreed that Oracle dependence must go and PostgreSQL is first on the list, there has been some debate on the spacewalk-devel mailing list on how to proceed with this. The main issue of contention is stored procedures and what should be done with them:

  1. Port them directly to PostgreSQL's PL/pgSQL. 
  1. Remove them one by one, migrating the code into the application layer.

Keep in mind that the situation is complicated by the fact that the stored procedures are currently accessed from all three languages that currently make up Spacewalk today. (Java, Python, Perl) 

The pros and cons of each approach will be discussed in the coming proposals. Please see [https://www.redhat.com/archives/spacewalk-devel/2008-June/thread.html#00015 this thread] for more information.

 * ''Is there any plans to migrate off Oracle completely?'' - RahulSundaram
  * ''Not that I'm aware of. Oracle will likely remain an option for Satellite installations for some time. That said we may be able to reach a point where the Oracle specific code is abstracted enough that we could package it separately and remove it from Spacewalk and just maintain it internally at Red Hat.'' - DevanGoodwin
  * ''Correct.  We will continue to provide external DB support (at the very least) for Oracle for our enterprise Satellite customers.''  - ToddSanders  


= Proposal = 

 1. Modify spacewalk-setup to support installation to multiple database backends. Idea here is to get something installable as quickly as possible, even if it's massively broken.
 1. Generate the PostgreSQL compatible schema with [http://freshmeat.net/projects/ora2pg/ ora2pg]. Will require a few minor touchups, then commit to git and get packaged up for those involved in this effort.
 1. Setup RPC interface in Java for migrating stored procedures to application code and exposing to the various languages we use.
 1. Use wiki to organize porting of stored procedures. Generate table,  and allow volunteers to claim procedures they will port for postgresql. See below section for details on the options available when porting stored procedures.
 1. Sort through query problems. When queries are found that do not work on PostgreSQL, preference would be to modify them to be compliant with both. If this is not possible we need to accommodate the possibility of multiple query versions in some situations. 

== Porting Stored Procedures ==

Following debate at the outset of this project the majority would seem to prefer having little to no dependence on database specific stored procedures for several reasons: 

 * No maintenance of multiple versions of the same stored procedure code for each database backend.
 * Easier to support other databases down the road.
 * Easier to properly unit test.
 * Much easier to write/read/maintain application code than stored procedure code.
 * Significant debate on whether business logic should be performed in the database in the first place.

This does however come with some disadvantages:

 * Porting to application code takes longer than porting straight from PL/QL to PL/pgSQL, which are reportedly quite similar. (see notes [http://www.pgadmin.org/docs/1.4/pg/plpgsql-porting.html here])
 * Potential performance loss in some situations.
 * Unable to use database specific features.

To reach a middle ground we considered implementing an RPC service which we could place either stored procedures, or equivalent application code behind (depending on the preference of the volunteer doing the porting). This would expose the functionality to the multiple languages that compose Spacewalk today, and provide a nice layer of abstraction for continuing removal of stored procedures down the road, as well as a place we could fall back to a procedure should we run into a significant performance problem. Initial technology proposed by cturner for this RPC layer was Facebook's [http://developers.facebook.com/thrift/ Thrift]. (see section on why Thrift is being considered)

However porting to application code comes with some substantial complications. ParthaAji first raised the issue of transactions. If the RPC layer were implemented in Java, this problem would probably not be an issue for other Java code as we can re-use the same underlying database connection and maintain the transaction across multiple calls. In the Perl stack however, transactions span multiple Perl layers, business logic, SQL queries, all with intermingled stored procedure calls. We cannot maintain the transaction if calling into an RPC service in another language. The only solution then is to port the entire operation out and into a more coarse grained RPC call, and suddenly this becomes a substantially more complicated and time consuming effort.

It should be noted that this is not the case for all the procedures, just some of the more complicated ones. Simpler procedures should be easily ported to application code behind the RPC layer.

So when porting stored procedures, the following options will be available, in order of preference:

 1. Port the procedure from PL/SQL to Java code backed by Hibernate, and expose it via a Thrift RPC call and update all code that calls the procedure directly.
 1. Port the procedure from PL/SQL to PL/pgSQL, but expose via a Thrift RPC call and update all code that calls the procedure directly.
 1. Port the procedure from PL/SQL to PL/pgSQL, and leave code in the various languages calling it directly.
  * Least desired but may be required for more complex and long winded Perl operations.

== Required Stored Procedures ==

There is a certain set of stored procedures within the schema that are referenced from '''within''' the database code directly. An example of this would be this usage of a stored procedure call within a view:

{{{
create or replace view rhnUserChannel as
select	cfp.user_id		user_id,
	cfp.org_id		org_id,
	cfm.channel_id		channel_id,
	'manage'		role
from	rhnChannelFamilyMembers	cfm,
	rhnUserChannelFamilyPerms cfp
where	cfp.channel_family_id = cfm.channel_family_id
	and rhn_channel.user_role_check(cfm.channel_id,
		cfp.user_id, 'manage') = 1
  ...
}}}

These stored procedures can not be extracted out into our RPC layer because they need to be called from within the schema itself.  The above need to be either:

 1.  Ported to PG/SQL
 1.  Inlined into the schema where the procedure is being called from (less desirable, and probably often quite nasty).

We need to identify in the list below the set of stored procedures that are called directly within the schema itself.

== Why Thrift? ==

[http://developers.facebook.com/thrift/ Thrift] is a library released by the Facebook team under their own open source license. (appears to be suitable for inclusion in Fedora but not yet verified) Thrift has been accepted into the Apache incubator and the proposal can be found [http://wiki.apache.org/incubator/ThriftProposal here]. 

It appears to be a relatively lightweight solution to the problem (as opposed to some of the other alternatives), and extremely fast. Doing some tinkering to see just how fast I wrote a simple do nothing service in Java, and then used a Python client that opened and closed 10,000 consecutive connections. (and ran this twice simultaneously to see how the server dealt) The result from both processes was approximately the same: '''2.80s user 2.39s system 54% cpu 9.499 total'''

It is however poorly documented so initial exploration is a bit hit or miss. In the "postgresql" branch on the git repository you can see some prototype code for this. Some points of interest:

|| spacewalk/thrift/spacewalk.thrift || Service definition used to auto-generate the service code in the various languages. ||
|| java/code/src/com/redhat/rhn/frontend/thrift/SpacewalkService.java || Auto-generated Java service code. ||
|| java/code/src/com/redhat/rhn/frontend/thrift/SpacewalkServiceHandler.java || Our actual implementation of the service. || 
|| spacewalk/java/code/src/com/redhat/rhn/webapp/RhnServletListener.java || Code which starts the RPC service when the webapp comes up. ||

Thrift seems like a relatively good fit for what we wish to accomplish. It appears to have a strong open source future and considering it's use at Facebook, should provide ample performance for what we wish to do.

Concerns or alternative suggestions?
 * ''Will this api layer only contain the stored procs/code equivalent?'' - JesusRodriguez
    * ''It would be great if we could move the entire Java Manager layer into this box, leaving the actions to call api.'' - JesusRodriguez
 * ''I'd like to see a diagram of how the flow would work within the current application context. i.e. user hits web page that needs stored proc access or client sends XML-RPC request to python backend.'' - JesusRodriguez

= Stored Procedures Analysis =

From fervent grepping through /eng/web, /eng/backend, /eng/java, /eng/client/tools, /eng/schema/views, /eng/schema/tables, /eng/schema/synonyms and mapping that with {{{select distinct name, type  from all_source where owner='SPACEWALK'}}} the following list was obtained. Basically this is the list of procedures that will likely need to be ported for PostgreSQL or replaced. (NOTE: keep an eye out still for procedures called by dead code, these can still be carefully deleted)


||Stored Procedures to Port/Replace||
||create_new_user||
||create_pxt_session||
||id_join||
||label_join||
||lookup_arch_type||
||lookup_cf_state||
||lookup_channel_arch||
||lookup_client_capability||
||lookup_config_filename||
||lookup_config_info||
||lookup_evr||
||lookup_feature_type||
||lookup_first_matching_cf||
||lookup_package_arch||
||lookup_package_capability||
||lookup_package_name||
||lookup_package_nevra||
||lookup_server_arch||
||lookup_sg_type||
||lookup_snapshot_invalid_reason||
||lookup_tag||
||lookup_transaction_package||
||lookup_virt_sub_level||
||name_join||
||rhnhistoryview_erratalist||
||rhnhistoryview_pkglist||
||create_first_org||
||create_new_org||
||delete_channel||
||delete_errata||
||delete_server||
||delete_server_bulk||
||pxt_session_cleanup||
||queue_errata||
||queue_server||
||rhn_install_org_satellites||
||rhn_synch_probe_state||
||set_ks_session_history_message||
||rhn_entitlements.modify_org_service||
||rhn_channel.subscribe_server||
||rhn_org.delete_user||
||rhn_entitlements.repoll_virt_guest_entitlements||
||rhn_channel.unsubscribe_server||
||rhn_server.insert_into_servergroup||
||rhn_server.snapshot_server||
||rhn_entitlements.assign_system_entitlement||
||rhn_server.delete_from_servergroup||
||rhn_channel.channel_priority||
||rhn_entitlements.remove_server_entitlement||
||rhn_user.find_mailable_address||
||rhn_config.delete_revision||
||rhn_entitlements.set_family_count||
||rhn_server.remove_action||
||rhn_entitlements.assign_channel_entitlement||
||rhn_entitlements.entitle_server||
||rhn_entitlements.can_entitle_server||
||rhn_config_channel.get_user_chan_access||
||rhn_config_channel.action_diff_revision_status||
||rhn_channel.bulk_server_basechange_from||
||rhn_org.delete_org||
||rhn_channel.user_role_check_debug||
||rhn_entitlements.activate_system_entitlement||
||rhn_entitlements.unentitle_server||
||rhn_entitlements.activate_channel_entitlement||
||rhn_server.bulk_snapshot||
||rhn_entitlements.subscribe_newest_servers||
||rhn_server.bulk_snapshot_tag||
||rpm.vercmp||
||rhn_config.insert_revision||
||rhn_channel.entitle_customer||
||rhn_server.check_user_access||
||rhn_channel.update_channel||
||rhn_entitlements.get_server_entitlement||
||rhn_server.set_custom_value||
||rhn_entitlements.entitlement_grants_service||
||rhn_server.insert_set_into_servergroup||
||rhn_server.insert_into_servergroup_maybe||
||rhn_config.insert_channel||
||rhn_channel.bulk_guess_server_base_from||
||rhn_server.tag_delete||
||rhn_exception.raise_exception||
||rhn_server.delete_set_from_servergroup||
||rhn_cache.update_perms_for_user||
||rhn_entitlements.can_switch_base||
||rhn_user.remove_from_usergroup||
||rhn_user.add_servergroup_perm||
||rhn_server.get_ip_address||
||rhn_config.insert_file||
||rhn_channel.bulk_guess_server_base||
||rhn_channel.get_org_access||
||rhn_channel.base_channel_for_release_arch||
||rhn_config.delete_file||
||rhn_server.bulk_set_custom_value||
||rhn_channel.org_channel_setting||
||rhn_user.check_role||
||rhn_user.remove_servergroup_perm||
||rhn_config_channel.get_user_revision_access||
||rhn_user.add_to_usergroup||
||rhn_channel.guess_server_base||
||rhn_channel.refresh_newest_package||
||rhn_channel.license_consent||
||rhn_channel.get_license_path||
||rhn_config_channel.get_user_file_access||
||rhn_server.system_service_level||
||rhn_package.canonical_name||
||rhn_channel.user_role_check||
||rhn_channel.normalize_server_arch||
||rhn_channel.get_cfam_org_access||
||rhn_user.add_users_to_usergroups||
||rhn_user.remove_users_from_servergroups||
||rhn_exception.raise_exception_val||
||rhn_channel.available_chan_subscriptions||
||rhn_config.delete_channel||
||rhn_server.clear_servergroup||
||rhn_channel.bulk_server_base_change||
||rpm.isalpha||
||rhn_server.tag_snapshot||
||rhn_bel.lookup_email_state||
||rhn_bel.is_org_paid||
||rhn_cache.update_perms_for_server||
||rhn_channel.update_family_counts||
||rhn_channel.get_org_id||
||rhn_user.get_org_id||
||rpm.isdigit||
||rhn_channel.loose_user_role_check||
||rhn_channel.bulk_unsubscribe_server||
||rhn_channel.bulk_subscribe_server||
||rhn_entitlements.set_customer_nonlinux||


Total number of stored procedures to convert 39 (stand alone functions or procedures) + (90 functions or procedures in packages) = 129

Most expensive stored procedures to port from Oracle to PostgreSQL

|| Package Name || Procedure Name || Number of lines||
|| RPM || rpmstrcmp ||132 ||
|| RHN_ENTITLEMENTS || modify_org_service ||127 ||
|| RHN_CHANNEL || subscribe_server ||120 ||
|| RHN_ORG || delete_user ||119 ||
|| RHN_ENTITLEMENTS || repoll_virt_guest_entitlements ||109 ||
|| RHN_CHANNEL || unsubscribe_server ||100 ||
|| RHN_SERVER || insert_into_servergroup ||95 ||
|| RHN_SERVER || snapshot_server ||89 ||
|| RHN_ENTITLEMENTS || assign_system_entitlement ||85 ||
|| RHN_ENTITLEMENTS || prune_group ||81 ||
|| RHN_SERVER || delete_from_servergroup ||78 ||
|| RHN_CHANNEL || channel_priority ||77 ||
|| RHN_ENTITLEMENTS || remove_server_entitlement ||73 ||
|| RHN_USER || find_mailable_address ||71 ||
|| RHN_CONFIG || delete_revision ||70 ||
|| RHN_ENTITLEMENTS || set_family_count ||63 ||
|| RHN_SERVER || remove_action ||62 ||
|| RHN_ENTITLEMENTS || assign_channel_entitlement ||62 ||
|| RHN_ENTITLEMENTS || set_group_count ||58 ||
|| RHN_ENTITLEMENTS || prune_family ||56 ||
|| RHN_ENTITLEMENTS || entitle_server ||55 ||
|| RHN_ENTITLEMENTS || can_entitle_server ||55 ||
|| RHN_CONFIG_CHANNEL || get_user_chan_access ||53 ||
|| RHN_CONFIG_CHANNEL || action_diff_revision_status ||50 ||
|| RHN_ENTITLEMENTS || prune_everything ||50 ||
|| RHN_CHANNEL || bulk_server_basechange_from ||46 ||
|| RHN_CHANNEL || available_family_subscriptions ||46 ||
|| RHN_ORG || delete_org ||45 ||
|| RHN_CHANNEL || user_role_check_debug ||44 ||
|| RHN_ENTITLEMENTS || activate_system_entitlement ||41 ||
|| RHN_ENTITLEMENTS || unentitle_server ||41 ||
|| RHN_CHANNEL || base_channel_rel_archid ||40 ||
|| RHN_ENTITLEMENTS || activate_channel_entitlement ||40 ||
|| RHN_CHANNEL || delete_server_channels ||38 ||
|| RHN_SERVER || bulk_snapshot ||37 ||
|| RHN_ENTITLEMENTS || subscribe_newest_servers ||36 ||
|| RHN_ENTITLEMENTS || entitle_last_modified_servers ||36 ||
|| RHN_ENTITLEMENTS || remove_org_entitlements ||35 ||
|| RHN_SERVER || bulk_snapshot_tag ||31 ||
|| RPM || vercmp ||30 ||
|| RHN_CONFIG || insert_revision ||30 ||
|| RHN_ENTITLEMENTS || find_compatible_sg ||29 ||
|| RHN_CHANNEL || can_server_consume_virt_channl ||29 ||
|| RHN_CHANNEL || entitle_customer ||28 ||
|| RHN_CHANNEL || set_family_maxmembers ||27 ||
|| RHN_SERVER || check_user_access ||27 ||
|| RHN_CHANNEL || update_channel ||27 ||
|| RHN_ENTITLEMENTS || get_server_entitlement ||26 ||
|| RHN_SERVER || set_custom_value ||26 ||
|| RHN_ENTITLEMENTS || entitlement_grants_service ||26 ||
|| RHN_SERVER || insert_set_into_servergroup ||26 ||
|| RHN_SERVER || insert_into_servergroup_maybe ||25 ||
|| RHN_CONFIG || insert_channel ||25 ||
|| RHN_SERVER || can_server_consume_virt_slot ||25 ||
|| RHN_CHANNEL || bulk_guess_server_base_from ||25 ||
|| RHN_SERVER || tag_delete ||24 ||
|| RHN_QUOTA || recompute_org_quota_used ||24 ||
|| RHN_EXCEPTION || raise_exception ||24 ||
|| RHN_SERVER || delete_set_from_servergroup ||23 ||
|| RHN_CACHE || update_perms_for_server_group ||23 ||
|| RHN_CACHE || update_perms_for_user ||23 ||
|| RHN_CHANNEL || channel_family_current_members ||23 ||
|| RHN_ENTITLEMENTS || can_switch_base ||23 ||
|| RHN_USER || remove_from_usergroup ||23 ||
|| RHN_USER || add_servergroup_perm ||21 ||
|| RHN_SERVER || get_ip_address ||21 ||
|| RHN_CONFIG || insert_file ||20 ||
|| RHN_CHANNEL || bulk_guess_server_base ||20 ||
|| RHN_CHANNEL || get_org_access ||20 ||
|| RHN_CHANNEL || base_channel_for_release_arch ||20 ||
|| RHN_QUOTA || set_org_quota_total ||20 ||
|| RHN_ENTITLEMENTS || lookup_entitlement_group ||19 ||
|| RHN_CONFIG || delete_file ||19 ||
|| RHN_ENTITLEMENTS || create_entitlement_group ||19 ||
|| RHN_SERVER || bulk_set_custom_value ||19 ||
|| RHN_CHANNEL || direct_user_role_check ||19 ||
|| RHN_CHANNEL || org_channel_setting ||19 ||
|| RHN_USER || check_role_implied ||18 ||
|| RHN_USER || check_role ||18 ||
|| RHN_USER || remove_servergroup_perm ||18 ||
|| RHN_CONFIG_CHANNEL || get_user_revision_access ||18 ||
|| RHN_USER || add_to_usergroup ||18 ||
|| RHN_CHANNEL || guess_server_base ||17 ||
|| RHN_DATE_MANIP || get_reporting_period_end ||17 ||
|| RHN_CHANNEL || refresh_newest_package ||17 ||
|| RHN_CHANNEL || license_consent ||17 ||
|| RHN_DATE_MANIP || get_reporting_period_start ||17 ||
|| RHN_CHANNEL || get_license_path ||16 ||
|| RHN_CHANNEL || clear_subscriptions ||16 ||
|| RHN_CONFIG_CHANNEL || get_user_file_access ||16 ||
|| RHN_PACKAGE || channel_occupancy_string ||16 ||
|| RHN_SERVER || system_service_level ||16 ||
|| RHN_PACKAGE || canonical_name ||15 ||
|| RHN_EXCEPTION || lookup_exception ||15 ||
|| RHN_SERVER || can_change_base_channel ||15 ||
|| RHN_CHANNEL || user_role_check ||15 ||
|| RHN_QUOTA || get_org_for_config_content ||14 ||
|| RHN_CHANNEL || family_for_channel ||14 ||
|| RHN_CHANNEL || normalize_server_arch ||14 ||
|| RHN_CHANNEL || get_cfam_org_access ||14 ||
|| RHN_SERVER || delete_from_org_servergroups ||14 ||
|| RHN_CONFIG || get_latest_revision ||13 ||
|| RHN_USER || add_users_to_usergroups ||13 ||
|| RHN_USER || remove_users_from_servergroups ||13 ||
|| RHN_EXCEPTION || raise_exception_val ||12 ||
|| RHN_CHANNEL || available_chan_subscriptions ||12 ||
|| RHN_CONFIG || delete_channel ||12 ||
|| RHN_SERVER || clear_servergroup ||11 ||
|| RHN_CHANNEL || unsubscribe_server_from_family ||11 ||
|| RHN_CHANNEL || update_channels_by_package ||11 ||
|| RHN_CHANNEL || update_channels_by_errata ||11 ||
|| RPM || isalphanum ||11 ||
|| RHN_CHANNEL || bulk_server_base_change ||11 ||
|| RPM || isalpha ||10 ||
|| RHN_SERVER || tag_snapshot ||10 ||
|| RHN_BEL || lookup_email_state ||10 ||
|| RHN_BEL || is_org_paid ||10 ||
|| RHN_ORG || find_server_group_by_type ||10 ||
|| RHN_CACHE || update_perms_for_server ||10 ||
|| RHN_CHANNEL || update_family_counts ||10 ||
|| RHN_CHANNEL || get_org_id ||9 ||
|| RHN_USER || get_org_id ||9 ||
|| RPM || isdigit ||9 ||
|| RHN_CHANNEL || loose_user_role_check ||8 ||
|| RPM || vercmpResetCounter ||8 ||
|| RHN_QUOTA || update_org_quota ||7 ||
|| RHN_CHANNEL || bulk_unsubscribe_server ||7 ||
|| RHN_CHANNEL || bulk_subscribe_server ||7 ||
|| RHN_CONFIG || prune_org_configs ||6 ||
|| RHN_ENTITLEMENTS || unset_customer_monitoring ||5 ||
|| RHN_ENTITLEMENTS || unset_customer_enterprise ||5 ||
|| RHN_ENTITLEMENTS || set_customer_nonlinux ||5 ||
|| RHN_ENTITLEMENTS || set_customer_provisioning ||5 ||
|| RHN_ENTITLEMENTS || unset_customer_nonlinux ||5 ||
|| RPM || vercmpCounter ||5 ||
|| RHN_ENTITLEMENTS || set_customer_monitoring ||5 ||
|| RHN_ENTITLEMENTS || set_customer_enterprise ||5 ||
|| RHN_ENTITLEMENTS || unset_customer_provisioning ||5 ||


== Stored procs used in Perl ==
||XXRH_OAI_WRAPPER.sync_address||
||XXRH_OAI_WRAPPER.sync_contact||
||XXRH_OAI_WRAPPER.sync_customer||
||dbms_utility.db_version||
||evr.as_vre_simple||
||rhn_bel.is_org_paid||
||rhn_channel.available_chan_subscriptions||
||rhn_channel.channel_priority||
||rhn_channel.get_license_path||
||rhn_channel.guess_server_base||
||rhn_channel.license_consent||
||rhn_channel.org_channel_setting||
||rhn_channel.refresh_newest_package||
||rhn_channel.update_channel||
||rhn_channel.user_role_check||
||rhn_config.delete_channel||
||rhn_config.delete_file||
||rhn_config.insert_channel||
||rhn_config_channel.action_diff_revision_status||
||rhn_config_channel.get_user_chan_access||
||rhn_config_channel.get_user_file_access||
||rhn_entitlements.can_entitle_server||
||rhn_entitlements.can_switch_base||
||rhn_entitlements.remove_server_entitlement||
||rhn_ep.entitlement_queue_pending||
||rhn_ep.process_queue_batch||
||rhn_org.delete_user||
||rhn_server.bulk_set_custom_value||
||rhn_server.bulk_snapshot||
||rhn_server.bulk_snapshot_tag||
||rhn_server.delete_set_from_servergroup||
||rhn_server.remove_action||
||rhn_server.set_custom_value||
||rhn_server.snapshot_server||
||rhn_server.system_service_level||
||rhn_server.tag_snapshot||
||rhn_user.add_to_usergroup||
||rhn_user.add_users_to_usergroups||
||rhn_user.delete_from_usergroup||
||rhn_user.remove_from_usergroup||
||rhn_user.remove_users_from_servergroups||
||rhn_user.remove_users_from_usergroups||
||rpm.vercmp||



== Stored Procs used in Java ==

||rhn.delete_channel||
||rhn_cache.update_perms_for_server||
||rhn_cache.update_perms_for_user||
||rhn_channel.available_chan_subscriptions||
||rhn_channel.channel_priority||
||rhn_channel.get_license_path||
||rhn_channel.get_org_access||
||rhn_channel.guess_server_base||
||rhn_channel.loose_user_role_check||
||rhn_channel.org_channel_setting||
||rhn_channel.refresh_newest_package||
||rhn_channel.subscribe_server||
||rhn_channel.unsubscribe_server||
||rhn_channel.update_channel||
||rhn_channel.user_role_check||
||rhn_channel.user_role_check_debug||
||rhn_config.delete_channel||
||rhn_config.delete_file||
||rhn_config.delete_revision||
||rhn_config.insert_channel||
||rhn_config.insert_file||
||rhn_config.insert_revision||
||rhn_config_channel.get_user_chan_access||
||rhn_config_channel.get_user_file_access||
||rhn_config_channel.get_user_revision_access||
||rhn_entitlements.assign_channel_entitlement||
||rhn_entitlements.assign_system_entitlement||
||rhn_entitlements.can_entitle_server||
||rhn_entitlements.entitle_server||
||rhn_entitlements.remove_server_entitlement||
||rhn_entitlements.unentitle_server||
||rhn_ep.poll_customer_internal||
||rhn_ep.process_queue_batch||
||rhn_org.delete_org||
||rhn_org.delete_user||
||rhn_server.delete_from_servergroup||
||rhn_server.insert_into_servergroup_maybe||
||rhn_server.remove_action||
||rhn_server.snapshot_server||
||rhn_server.system_service_level||
||rhn_user.add_servergroup_perm||
||rhn_user.add_to_usergroup||
||rhn_user.check_role||
||rhn_user.remove_from_usergroup||
||rhn_user.remove_servergroup_perm||
||rpm.vercmp||
||web_disable_user_pkg.disable_user||
||web_disable_user_pkg.reenable_user||
||xxrh_oai_wrapper.sync_contact||
||xxrh_oai_wrapper.sync_customer||

= Potential Problems =

Thought of something that might pose a problem? Please add it here:


= Links =

  * [http://www.pgadmin.org/ pgAdmin]: Looks like an exceptional GUI tool for Postgresql management.
  * http://www.pgadmin.org/docs/1.4/pg/plpgsql-porting.html: Some notes on migrating Oracle PL/SQL to PL/pgSQL.
  * [http://freshmeat.net/projects/ora2pg/ ora2pg]: Migration tool.
