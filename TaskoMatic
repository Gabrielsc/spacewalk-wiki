== What is Taskomatic? ==
Taskomatic is a job scheduler which closely resembles cron. Taskomatic jobs are the "background" parts of Spacewalk which must be performed on a regular basis. The Java port of Taskomatic is based on the [http://www.opensymphony.com/quartz/ Quartz] scheduler library. The daemon part of Taskomatic uses the [http://wrapper.tanukisoftware.org/doc/english/introduction.html Tanuki Service Wrapper] library..

= Configuration part is valid only until Spacewalk 1.1 =

== How is Taskomatic configured? ==
Taskomatic is controlled by two configuration files: /etc/rhn/default/rhn_taskomatic.conf and /etc/rhn/default/rhn_taskomatic_daemon.conf. 

''rhn_taskomatic_daemon.conf'' configures the runtime environment for the Taskomatic daemon itself. This includes information such as JVM option settings, classpath entries, and the Tanuki Service Wrapper's log file location and default logging level. You should not need to edit the majority of the entries in this file. Listed below are entries which might be helpful during Taskomatic troubleshooting sessions:

 wrapper.java.initmemory=<starting_heap_size>
 wrapper.java.maxmemory=<maximum_heap_size> (These are useful in the case of OutOfMemoryExceptions)
 wrapper.logfile=<logfile_location>
 wrapper.logfile.loglevel=<log_level> (Can be one of: NONE, FATAL, ERROR, STATUS, INFO, DEBUG. See [http://wrapper.tanukisoftware.org/doc/english/prop-logfile-loglevel.html here] for more information)

''rhn_taskomatic.conf'' contains entries which declare the tasks available to be scheduled and schedules them. The config entries taskomatic.default_tasks and taskomatic.tasks are concatenated together to build the canonical list of available Taskomatic tasks. Tasks common to both Satellite and Hosted are listed in taskomatic.default_tasks. Tasks which are specific to either Satellite or Hosted are listed in taskomatic.tasks in  /etc/rhn/default/rhn_web.conf.

Tasks are scheduled using the taskomatic.<fully_qualified_task_class_name>.schedule entries. The value of each entry should be a valid Quartz schedule string. See [http://quartz.sourceforge.net/javadoc/org/quartz/CronTrigger.html here] for more detailed information.

== Reconfiguring Taskomatic ==

Changes to the '''frequency''' of the taskomatic tasks is not recommended but changing the time of day when the daily tasks take place can be done.

In order to change when you want a task to run you can add the '''overridden''' value in:

{{{
/etc/rhn/rhn.conf
}}}

Changes to /etc/rhn/default/* are not recommended because upgrades will erase any customizations you may have.  To change the time a task runs add a value such as:  

{{{
taskomatic.com.redhat.rhn.taskomatic.task.SummaryPopulation.schedule = 0 0 23 ? * *
}}} 

to /etc/rhn/rhn.conf and restart taskomatic.  


== Tasks ==
Tasks fall into three groups: hosted only, satellite only, and both. 

{{{
#!html
<table cols="3" border="1" cellpadding="2" cellspacing="2">
  <tr>
    <th>Task Name</th>
    <th>DB Name</th>
    <th>Interval</th>
    <th>Purpose</th>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.DailySummary</td>
    <td>daily_summary</td>
    <td>5:00AM Daily</td>
    <td>Sends out email on a daily basis with a summary of out-of-date systems</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.CleanCurrentAlerts</td>
    <td>clean_current_alerts</td>
    <td>4:35AM Daily</td>
    <td>Cleans up Monitoring notification messages from the database.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.ErrataMailer</td>
    <td>errata_engine</td>
    <td>Every 30 mins</td>
    <td>Sends email to org admins for each errata alert, eg: "RHN Errata Alert: RHBA-2008:0959-3.."</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.ErrataQueue</td>
    <td>errata_queue</td>
    <td>Top of every minute</td>
    <td>Processes errata that are synced from satellite-sync and sets them up to be ready for the ErrataMailer to send the email notifications.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.ErrataCacheTask</td>

    <td>errata_cache</td>
    <td>Every 10 mins</td>
    <td>Calculates the 'errata cache' information which is used in the GUI to display what systems need what errata.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.KickstartCleanup</td>
    <td>kickstart_session_check</td>
    <td>Every 10 mins</td>
    <td>Cleans up old kickstart sessions that have gone stale.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.NoChannelCheck</td>
    <td>server_channel_check</td>
    <td>3:05 AM Daily</td>
    <td>Sends out email about any system that does not have a base channel defined.</td>
    <td></td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.PackageCleanup</td>
    <td>package_cleanup</td>
    <td>Every 10 mins</td>
    <td>Physically deletes rpms from /var/satellite that are 'marked' for deletion in the GUI.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.PushedUsers</td>
    <td>pushed_users</td>
    <td>Middle of every minute</td>
    <td>Hosted Only: Needs to get removed.  Not ran or used in Satellite</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.RepollCustomerEntitlement</td>
    <td>repoll_customer_entitlement</td>
    <td>Top of every minute</td>
    <td>Hosted Only: Needs to get removed.  Not ran or used in Satellite</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.task.ChannelRepodata</td>
    <td>channel_repodata</td>
    <td>Top of every minute</td>
    <td>Prototype to be used to regenerate channel metadata.  Not avail yet.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.SatelliteCertificateCheck</td>
    <td>TBD</td>
    <td>Once a day at 11:00 PM</td>
    <td>Checks to see if the Satellite Certificate is expired and if so starts sending email with warning.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.SandboxCleanup</td>
    <td>sandbox_cleanup</td>
    <td>4:05AM Daily</td>
    <td>Deletes stale Configuration Management system sandboxes.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.SessionCleanup</td>
    <td>session_cleanup</td>
    <td>Every 15 mins</td>
    <td>Deletes expired GUI Http sessions from the pxtsessions database table.</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.SummaryPopulation</td>
    <td>summary_populator</td>
    <td>Every 5 mins</td>
    <td>Works in tandem with "DailySummary" to determine what orgs should get the daily summary email.</td>
    <td>X</td>
  </tr>
  <tr>
    <td>com.redhat.rhn.tasks.SynchProbeState</td>
    <td>synch_probe_state</td>
    <td>Top of every minute</td>
    <td>Used to keep monitoring data in sync within the database.</td>
  </tr>
</table>
}}}


== Troubleshooting Taskomatic ==

All Taskomatic logging is controlled by the log4j configuration file /usr/share/rhn/classes/log4j.properties. Taskomatic task engine and individual task log output is configured to go to /var/log/rhn/rhn_taskomatic.log.

Make sure that these lines exist in the log4j.properties file

{{{
 log4j.appender.TaskomaticAppender=org.apache.log4j.FileAppender
 log4j.appender.TaskomaticAppender.file=/var/log/rhn/rhn_taskomatic.log
 log4j.appender.TaskomaticAppender.layout=org.apache.log4j.PatternLayout
 log4j.appender.TaskomaticAppender.layout.ConversionPattern=[%d] %-5p %c - %m%n
}}}

To enable Taskomatic task engine logging add or edit the following line in log4j.properties:
{{{
 log4j.logger.com.redhat.rhn.taskomatic=DEBUG,TaskomaticAppender
}}}
To enable coarse-grained task logging add or edit the following line in log4j.properties:
{{{
 log4j.logger.com.redhat.rhn.task=DEBUG,TaskomaticAppender
}}}
To enable task-specific execution logging add or edit the following line, as needed, in log4j.properties:
{{{
 log4j.logger.<insert_task_name_here>=DEBUG,TaskomaticAppender
}}}
The Taskomatic daemon process can be started in console mode as well. This is helpful in diagnosing problems where Taskomatic itself will not run:
{{{
  sudo /sbin/service taskomatic stop
  sudo /sbin/service taskomatic console
}}}

