Tito is our homegrown tool for tagging packages, finding which packages need building, building tarballs and rpms, and shipping them off to the appropriate build system (straight to Koji or via CVS). It is designed to accomodate a git repository with a number of separate packages contained within. Tito has additional functionality geared towards building packages off an upstream project's git repository which you inherit from.

MORE COMING SOON

== Repository Configuration ==

Defined in rel-eng/tito.props at the root of your git repository. This file allows you to configure a number of options for how tito behaves, which builder/tagger classes to use, which packages get built where and how. Git branches allow you to customize this behavior for different releases and streams in the code.

An example configuration:

{{{
[globalconfig]
default_builder = spacewalk.releng.builder.Builder
default_tagger = spacewalk.releng.tagger.VersionTagger
tag_suffix = -mysuffix

[koji]
autobuild_tags = dist-f10-sw-0.5-candidate dist-5E-sw-0.5-candidate

[dist-f10-sw-0.5-candidate]
disttag = .fc10
whitelist = some-package-name

[dist-5E-sw-0.5-candidate]
disttag = .el5
blacklist = another-package-name

[cvs]
cvsroot = :gserver:cvs.example.com:/cvs/repo
branches = CVS_BRANCH1 CVS_BRANCH2
}}}


=== globalconfig ===


default_builder and default_tagger are required, these apply to most all projects in your repository. (can be overridden for specific packages but this feature is seldom needed)

tag_suffix is optional, when tagging package releases this suffix will be appended to the git tag. Useful for projects inheriting from an upstream git repository, allowing you to identify which tags were created in your repository vs those that were pulled down from upstream.

=== koji ===

Configures which koji tags packages should be built into. The actual koji configuration is your own koji client configuration. The default command used to submit packages can be customized in ~/.spacewalk-build-rc. (see section below)

=== [kojitag] ===

Allow you to customize some behavior for a koji tag you're submitting a build to.

disttag is optional, but often useful. This identifies the disttag to be applied to the source rpms you submit, otherwise the default for your system will be used.

blacklist is optional, and will prevent the packages listed from being built in this koji tag. Separate package names with a space. Additionally this will prevent the package from appearing when checking for missing builds in a particular tag.

whitelist is optional, but if present tito will assume that all other packages are blacklisted and only those whitelisted explicitly will be built in this tag. whitelist and blacklist cannot be combined and tito will error out if both are present. This setting currently has no effect when checking for missing builds in a particular tag.

== ~/.spacewalk-build-rc ==

This file allows for developer specific configuration of some tito behavior.

{{{
$ cat ~/.spacewalk-build-rc 
RPMBUILD_BASEDIR=/tmp/tito
KOJI_OPTIONS=-c ~/.koji/koji-spacewalk.conf build --nowait
}}}




